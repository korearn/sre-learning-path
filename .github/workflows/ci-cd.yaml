# .github/workflows/ci-cd.yaml - VERSIÓN CORREGIDA
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Instalar desde requirements.txt si existe, o instalar paquetes específicos
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        fi
        # Instalar dependencias de testing
        pip install pytest pytest-cov
        
    - name: Run basic tests
      run: |
        python -m pytest tests/ -v

  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t log-analyzer:ci-cd .

  deploy-demo:
    name: Deploy to Kind Cluster
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Kind cluster
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/
        
    - name: Create cluster
      run: |
        cat > kind-config.yaml << 'EOF'
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
        EOF
        kind create cluster --config kind-config.yaml
        
    - name: Verify cluster
      run: |
        kubectl cluster-info
        kubectl get nodes

  success:
    name: Pipeline Success
    runs-on: ubuntu-latest
    needs: [test, build, deploy-demo]
    if: always()
    
    steps:
    - name: Pipeline completed
      run: |
        echo "✅ CI/CD Pipeline execution completed"
        echo "Tests, build, and deployment verification finished"